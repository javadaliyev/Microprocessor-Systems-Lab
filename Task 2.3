void setup() {
  Serial.begin(9600);

  uint8_t result; // Declaration of two unsigned integers
  uint8_t sreg;   


  asm volatile (
    "ldi r16, 50       \n\t"   // Load 50 into r16
    "ldi r17, 200      \n\t"   // Load 200 into r17
    "sub r16, r17      \n\t"   // Subtract the numbers: r16-r17 = 50-200
    "in __tmp_reg__, __SREG__ \n\t"  // Read SREG into temporary register r0
    "mov %1, __tmp_reg__       \n\t" // Move SREG to C variable sreg
    "mov %0, r16       \n\t" // Move result to C variable result
    : "=r"(result), "=r"(sreg)     // Output operands
    :                                 // No input operands
    : "r16", "r17"                    // Clobbered registers
  );

  
  bool Z = (sreg & (1 << 1));   // Zero flag = bit 1
  bool C = (sreg & (1 << 0));   // Carry/borrow flag = bit 0

  // Print results
  Serial.print("Result = ");
  Serial.println(result);        // 8-bit wrapped result

  Serial.print("Z (zero) = ");
  Serial.println(Z);

  Serial.print("C (carry/borrow) = ");
  Serial.println(C);
}

void loop() {
  // Loop is empty
}
