void setup() {
  Serial.begin(9600); // Start serial communication at 9600 baud rate


  uint8_t result; // Variable to store the subtraction result
  uint8_t sreg;  // Variable to store the status register value  


  asm volatile (
    "ldi r16, 50       \n\t" // Put the value 50 into r16
    "ldi r17, 200      \n\t" // Put the value 200 into r17
    "sub r16, r17      \n\t" // Subtract r17 from r16 (50 - 200)
    "in __tmp_reg__, __SREG__ \n\t" // Copy the status register (SREG) into a temporary register
    "mov %1, __tmp_reg__       \n\t" // Move the SREG value to the C variable sreg
    "mov %0, r16       \n\t" // Move the subtraction result to the C variable result
    : "=r"(result), "=r"(sreg) // Output variables
    :   // No input variables                                 
    : "r16", "r17" // Registers used in the operation
  );

  
  bool Z = (sreg & (1 << 1)); // Get the Zero bit from SREG
  bool C = (sreg & (1 << 0)); // Get the Carry (borrow) bit from SREG

  // Show the results on Serial Monitor
  Serial.print("Result = ");
  Serial.println(result); //Display the subtraction result

  Serial.print("Z (zero) = ");
  Serial.println(Z); //Display the Zero value (0 or 1)

  Serial.print("C (carry/borrow) = ");
  Serial.println(C); // Display the Carry/Borrow value (0 or 1)
}

void loop() {
//Nothing to repeat
}
